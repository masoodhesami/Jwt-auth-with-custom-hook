{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\quera\\\\jwt-auth\\\\src\\\\Pages\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NotRobot from \"../Components/NotRobot\";\nimport LoginButton from \"../Components/LoginButtons\";\nimport ErrorMessage from \"../Components/ErrorMessage\";\nimport useJWT from \"../Hooks/useJWT\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const navigate = useNavigate();\n  let location = useLocation();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [noRobot, setNORobot] = useState(true);\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [unValidMail, setUnValidMail] = useState(true);\n  const [navigator, setNavigator] = useState(false);\n  const {\n    login\n  } = useJWT();\n\n  function validateEmail(email) {\n    let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (email.match(regexEmail)) {\n      setUnValidMail(false);\n      return true;\n    } else {\n      setUnValidMail(true);\n      return false;\n    }\n  }\n\n  const navigateUser = () => {\n    if (navigator === true) {\n      // navigate(\"/\");\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\",\n        state: {\n          from: location\n        },\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this);\n    }\n  };\n\n  useEffect(() => {\n    validateEmail(email);\n    navigateUser();\n  }, [navigator]);\n\n  const clickHandler = async () => {\n    try {\n      const accessData = await login(email, password); // navigate(\"/\");\n\n      if (accessData.access) {\n        setData(accessData);\n        setLoggedIn(true);\n        setNavigator(true);\n        console.log(accessData);\n      }\n    } catch (err) {\n      setPassword(\"\");\n      setNORobot(false);\n      setLoggedIn(false);\n      setNavigator(false);\n    }\n  };\n\n  const onChangeEmail = e => {\n    setEmail(e.target.value);\n    validateEmail(e.target.value);\n    console.log(validateEmail(e.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      \"data-testid\": \"email\",\n      label: \"\\u2709\\uFE0F Email\",\n      type: \"email\",\n      value: email,\n      onChange: e => onChangeEmail(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      \"data-testid\": \"password\",\n      label: \"\\uD83D\\uDD11 Password\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), loggedIn === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotRobot, {\n        checked: noRobot,\n        onChange: () => {\n          setNORobot(!noRobot);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(LoginButton, {\n      onClick: clickHandler,\n      disabled: !(password && email && !unValidMail)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Login, \"BFyobBxh8QY650Sjf8t4LxWeSLU=\", true, function () {\n  return [useNavigate, useJWT];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/react/quera/jwt-auth/src/Pages/Login.jsx"],"names":["React","useState","useEffect","useNavigate","Navigate","Card","Input","NotRobot","LoginButton","ErrorMessage","useJWT","Login","props","navigate","location","useLocation","email","setEmail","password","setPassword","data","setData","noRobot","setNORobot","loggedIn","setLoggedIn","unValidMail","setUnValidMail","navigator","setNavigator","login","validateEmail","regexEmail","match","navigateUser","from","clickHandler","accessData","access","console","log","err","onChangeEmail","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {useNavigate,Navigate} from \"react-router-dom\"\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NotRobot from \"../Components/NotRobot\";\nimport LoginButton from \"../Components/LoginButtons\";\nimport ErrorMessage from \"../Components/ErrorMessage\";\nimport useJWT from \"../Hooks/useJWT\"\n\n\nconst Login = (props) => {\n        const navigate = useNavigate();\n        let location = useLocation();\n        const [email, setEmail] = useState(\"\");\n        const [password, setPassword] = useState(\"\");\n        const [data, setData] = useState([]);\n        const [noRobot, setNORobot] = useState(true);\n        const [loggedIn, setLoggedIn] = useState(true);\n        const [unValidMail, setUnValidMail] = useState(true);\n        const [navigator, setNavigator] = useState(false);\n        const {login} = useJWT();\n\n        function validateEmail(email) {\n            let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            if (email.match(regexEmail)) {\n                setUnValidMail(false);\n                return true;\n            } else {\n                setUnValidMail(true);\n                return false;\n            }\n        }\n\n        const navigateUser = () => {\n            if (navigator === true) {\n                // navigate(\"/\");\n                return <Navigate to=\"/\" state={{ from: location }} replace />;\n            }\n        }\n\n        useEffect(() => {\n            validateEmail(email);\n            navigateUser()\n        }, [navigator])\n\n        const clickHandler = async () => {\n            try {\n                const accessData = await login(email, password);\n                // navigate(\"/\");\n                if (accessData.access) {\n                    setData(accessData);\n                    setLoggedIn(true);\n                    setNavigator(true);\n                    console.log(accessData);\n                }\n\n            } catch (err) {\n                setPassword(\"\");\n                setNORobot(false);\n                setLoggedIn(false);\n                setNavigator(false);\n            }\n        }\n        const onChangeEmail = (e) => {\n            setEmail(e.target.value);\n            validateEmail(e.target.value)\n            console.log(validateEmail(e.target.value))\n        }\n\n\n        return (\n            <Card>\n                <h3>Login</h3>\n\n                <Input\n                    data-testid=\"email\"\n                    label=\"✉️ Email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => onChangeEmail(e)}\n                />\n\n                <Input\n                    data-testid=\"password\"\n                    label=\"🔑 Password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                {loggedIn === false &&\n                <>\n                    <NotRobot checked={noRobot} onChange={() => {\n                        setNORobot(!noRobot)\n                    }}/>\n                    <ErrorMessage/>\n                </>}\n                <LoginButton onClick={clickHandler} disabled={!(password && email && !unValidMail)}\n                />\n            </Card>\n        );\n    }\n;\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}