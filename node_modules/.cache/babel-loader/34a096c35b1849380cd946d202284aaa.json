{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\quera\\\\jwt-auth\\\\src\\\\Pages\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NotRobot from \"../Components/NotRobot\";\nimport LoginButton from \"../Components/LoginButtons\";\nimport ErrorMessage from \"../Components/ErrorMessage\";\nimport useJWT from \"../Hooks/useJWT\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    login\n  } = useJWT();\n  console.log(email, password);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      \"data-testid\": \"email\",\n      label: \"\\u2709\\uFE0F Email\",\n      type: \"email\" // value={\"\"}\n      ,\n      onChange: e => {\n        setEmail(e.target.value());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      \"data-testid\": \"password\",\n      label: \"\\uD83D\\uDD11 Password\",\n      type: \"password\" // value={\"\"}\n      ,\n      onChange: e => {\n        setPassword(e.target.value());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(NotRobot, {\n      checked: false,\n      onChange: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n      onClick: () => {\n        login();\n      },\n      disabled: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"/ncW7o0Zu074E9KQiEjXhlit0F8=\", false, function () {\n  return [useJWT];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/react/quera/jwt-auth/src/Pages/Login.jsx"],"names":["React","useState","Card","Input","NotRobot","LoginButton","ErrorMessage","useJWT","Login","props","email","setEmail","password","setPassword","login","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,KAAD,EAASC,QAAT,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACW,QAAD,EAAYC,WAAZ,IAA2BZ,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM;AAACa,IAAAA;AAAD,MAAUP,MAAM,EAAtB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAkBE,QAAlB;AACA,sBACC,QAAC,IAAD;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAGC,QAAC,KAAD;AACC,qBAAY,OADb;AAEC,MAAA,KAAK,EAAC,oBAFP;AAGC,MAAA,IAAI,EAAC,OAHN,CAIC;AAJD;AAKC,MAAA,QAAQ,EAAGK,CAAD,IAAO;AAACN,QAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,EAAD,CAAR;AAA2B;AAL9C;AAAA;AAAA;AAAA;AAAA,YAHD,eAWC,QAAC,KAAD;AACC,qBAAY,UADb;AAEC,MAAA,KAAK,EAAC,uBAFP;AAGC,MAAA,IAAI,EAAC,UAHN,CAIC;AAJD;AAKC,MAAA,QAAQ,EAAGF,CAAD,IAAO;AAACJ,QAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAT,EAAD,CAAX;AAA8B;AALjD;AAAA;AAAA;AAAA;AAAA,YAXD,eAmBC,QAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAnB;AAA0B,MAAA,QAAQ,EAAE,MAAM,CAAE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAnBD,eAoBC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YApBD,eAsBC,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,MAAM;AAACL,QAAAA,KAAK;AAAG,OAArC;AAAuC,MAAA,QAAQ,EAAE;AAAjD;AAAA;AAAA;AAAA;AAAA,YAtBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA0BA,CA/BD;;GAAMN,K;UAGWD,M;;;KAHXC,K;AAiCN,eAAeA,KAAf","sourcesContent":["import React , {useState} from \"react\";\n\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NotRobot from \"../Components/NotRobot\";\nimport LoginButton from \"../Components/LoginButtons\";\nimport ErrorMessage from \"../Components/ErrorMessage\";\nimport useJWT from \"../Hooks/useJWT\"\n\nconst Login = (props) => {\n\tconst [email , setEmail]=useState(\"\");\n\tconst [password , setPassword] = useState(\"\")\n\tconst {login} = useJWT();\n\tconsole.log(email,password)\n\treturn (\n\t\t<Card>\n\t\t\t<h3>Login</h3>\n\n\t\t\t<Input\n\t\t\t\tdata-testid=\"email\"\n\t\t\t\tlabel=\"✉️ Email\"\n\t\t\t\ttype=\"email\"\n\t\t\t\t// value={\"\"}\n\t\t\t\tonChange={(e) => {setEmail(e.target.value())}}\n\t\t\t/>\n\n\t\t\t<Input\n\t\t\t\tdata-testid=\"password\"\n\t\t\t\tlabel=\"🔑 Password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\t// value={\"\"}\n\t\t\t\tonChange={(e) => {setPassword(e.target.value())}}\n\t\t\t/>\n\n\t\t\t<NotRobot checked={false} onChange={() => {}} />\n\t\t\t<ErrorMessage />\n\n\t\t\t<LoginButton onClick={() => {login()}} disabled={false} />\n\t\t</Card>\n\t);\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}