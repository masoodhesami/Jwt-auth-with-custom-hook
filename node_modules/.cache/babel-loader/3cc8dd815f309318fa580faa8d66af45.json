{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\quera\\\\jwt-auth\\\\src\\\\Pages\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NotRobot from \"../Components/NotRobot\";\nimport LoginButton from \"../Components/LoginButtons\";\nimport ErrorMessage from \"../Components/ErrorMessage\";\nimport useJWT from \"../Hooks/useJWT\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  // const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [data, setData] = useState({});\n  const {\n    login\n  } = useJWT();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      \"data-testid\": \"email\",\n      label: \"\\u2709\\uFE0F Email\",\n      type: \"email\" // value={\"\"}\n      ,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      \"data-testid\": \"password\",\n      label: \"\\uD83D\\uDD11 Password\",\n      type: \"password\" // value={\"\"}\n      ,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), !data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotRobot, {\n        checked: false,\n        onChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(LoginButton, {\n      onClick: () => {\n        const data = login(email, password);\n\n        if (data) {\n          // history.push(\"/\");\n          setData(data);\n        } else {}\n      },\n      disabled: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"MKDA3TR4zKk3wkES2F7TSFDV/q4=\", false, function () {\n  return [useJWT];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/react/quera/jwt-auth/src/Pages/Login.jsx"],"names":["React","useState","useHistory","Card","Input","NotRobot","LoginButton","ErrorMessage","useJWT","Login","props","email","setEmail","password","setPassword","data","setData","login","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAACgB,IAAAA;AAAD,MAAUT,MAAM,EAAtB;AACA,sBACI,QAAC,IAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,KAAD;AACI,qBAAY,OADhB;AAEI,MAAA,KAAK,EAAC,oBAFV;AAGI,MAAA,IAAI,EAAC,OAHT,CAII;AAJJ;AAKI,MAAA,QAAQ,EAAGU,CAAD,IACNN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AANhB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAaI,QAAC,KAAD;AACI,qBAAY,UADhB;AAEI,MAAA,KAAK,EAAC,uBAFV;AAGI,MAAA,IAAI,EAAC,UAHT,CAII;AAJJ;AAKI,MAAA,QAAQ,EAAGF,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AALhC;AAAA;AAAA;AAAA;AAAA,YAbJ,EAoBK,CAACL,IAAD,iBACD;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAnB;AAA0B,QAAA,QAAQ,EAAE,MAAM,CACzC;AADD;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBArBJ,eA0BI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,MAAM;AACxB,cAAMA,IAAI,GAAGE,KAAK,CAACN,KAAD,EAAQE,QAAR,CAAlB;;AACA,YAAIE,IAAJ,EAAU;AACN;AACAC,UAAAA,OAAO,CAACD,IAAD,CAAP;AACH,SAHD,MAGO,CAEN;AACJ,OARD;AAQG,MAAA,QAAQ,EAAE;AARb;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CA5CD;;GAAMN,K;UAKcD,M;;;KALdC,K;AA+CN,eAAeA,KAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\"\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NotRobot from \"../Components/NotRobot\";\nimport LoginButton from \"../Components/LoginButtons\";\nimport ErrorMessage from \"../Components/ErrorMessage\";\nimport useJWT from \"../Hooks/useJWT\"\n\nconst Login = (props) => {\n    // const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [data, setData] = useState({});\n    const {login} = useJWT();\n    return (\n        <Card>\n            <h3>Login</h3>\n\n            <Input\n                data-testid=\"email\"\n                label=\"✉️ Email\"\n                type=\"email\"\n                // value={\"\"}\n                onChange={(e) =>\n                    setEmail(e.target.value)\n                }\n            />\n\n            <Input\n                data-testid=\"password\"\n                label=\"🔑 Password\"\n                type=\"password\"\n                // value={\"\"}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            {!data &&\n            <>\n                <NotRobot checked={false} onChange={() => {\n                }}/>\n                <ErrorMessage/>\n            </>}\n            <LoginButton onClick={() => {\n                const data = login(email, password)\n                if (data) {\n                    // history.push(\"/\");\n                    setData(data);\n                } else {\n\n                }\n            }} disabled={false}/>\n        </Card>\n    );\n}\n;\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}