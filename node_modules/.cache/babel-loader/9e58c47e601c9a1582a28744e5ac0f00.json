{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\quera\\\\jwt-auth\\\\src\\\\Pages\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NotRobot from \"../Components/NotRobot\";\nimport LoginButton from \"../Components/LoginButtons\";\nimport ErrorMessage from \"../Components/ErrorMessage\";\nimport useJWT from \"../Hooks/useJWT\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [data, setData] = useState({});\n  const [noRobot, setNORobot] = useState(true);\n  const {\n    login\n  } = useJWT();\n\n  const clickHandler = async () => {\n    const data = await login(email, password);\n    console.log(data);\n\n    if (!data) {\n      setPassword(\"\");\n      setNORobot(false);\n    }\n\n    if (data.access) {\n      setData(data);\n      navigate(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      \"data-testid\": \"email\",\n      label: \"\\u2709\\uFE0F Email\",\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      \"data-testid\": \"password\",\n      label: \"\\uD83D\\uDD11 Password\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), !data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotRobot, {\n        checked: noRobot,\n        onChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(LoginButton, {\n      onClick: clickHandler,\n      disabled: !(password && email)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Login, \"ImR2gabmbVjI7s7PCoJEaMq8cjw=\", false, function () {\n  return [useNavigate, useJWT];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/react/quera/jwt-auth/src/Pages/Login.jsx"],"names":["React","useState","useNavigate","Card","Input","NotRobot","LoginButton","ErrorMessage","useJWT","Login","props","navigate","email","setEmail","password","setPassword","data","setData","noRobot","setNORobot","login","clickHandler","console","log","access","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACjB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAACmB,IAAAA;AAAD,MAAUZ,MAAM,EAAtB;;AACA,QAAMa,YAAY,GAAG,YAAY;AAC7B,UAAML,IAAI,GAAG,MAAMI,KAAK,CAACR,KAAD,EAAQE,QAAR,CAAxB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;;AACA,QAAI,CAACA,IAAL,EAAW;AACPD,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACD,QAAIH,IAAI,CAACQ,MAAT,EAAiB;AACbP,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAL,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AACJ,GAXD;;AAYA,sBACI,QAAC,IAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,KAAD;AACI,qBAAY,OADhB;AAEI,MAAA,KAAK,EAAC,oBAFV;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAEC,KAJX;AAKI,MAAA,QAAQ,EAAGa,CAAD,IACNZ,QAAQ,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AANhB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAaI,QAAC,KAAD;AACI,qBAAY,UADhB;AAEI,MAAA,KAAK,EAAC,uBAFV;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,KAAK,EAAEb,QAJX;AAKI,MAAA,QAAQ,EAAGW,CAAD,IAAOV,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AALhC;AAAA;AAAA;AAAA;AAAA,YAbJ,EAoBK,CAACX,IAAD,iBACD;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEE,OAAnB;AAA4B,QAAA,QAAQ,EAAE,MAAM,CAC3C;AADD;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBArBJ,eA0BI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEG,YAAtB;AAAoC,MAAA,QAAQ,EAAE,EAAEP,QAAQ,IAAIF,KAAd;AAA9C;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAjDL;;GAAMH,K;UACmBP,W,EAKDM,M;;;KANlBC,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\"\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NotRobot from \"../Components/NotRobot\";\nimport LoginButton from \"../Components/LoginButtons\";\nimport ErrorMessage from \"../Components/ErrorMessage\";\nimport useJWT from \"../Hooks/useJWT\"\n\n\nconst Login = (props) => {\n        const navigate = useNavigate();\n        const [email, setEmail] = useState(\"\");\n        const [password, setPassword] = useState(\"\");\n        const [data, setData] = useState({});\n        const [noRobot, setNORobot] = useState(true);\n        const {login} = useJWT();\n        const clickHandler = async () => {\n            const data = await login(email, password);\n            console.log(data);\n            if (!data) {\n                setPassword(\"\");\n                setNORobot(false);\n            }\n            if (data.access) {\n                setData(data);\n                navigate(\"/\");\n            }\n        }\n        return (\n            <Card>\n                <h3>Login</h3>\n\n                <Input\n                    data-testid=\"email\"\n                    label=\"✉️ Email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) =>\n                        setEmail(e.target.value)\n                    }\n                />\n\n                <Input\n                    data-testid=\"password\"\n                    label=\"🔑 Password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                {!data &&\n                <>\n                    <NotRobot checked={noRobot} onChange={() => {\n                    }}/>\n                    <ErrorMessage/>\n                </>}\n                <LoginButton onClick={clickHandler} disabled={!(password && email)}/>\n            </Card>\n        );\n    }\n;\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}